https://www.nowcoder.com/tutorial/94/ae05554a3ad84e42b6f9fc4d52859dc4
1.字符串转换编码
new String(str.getBytes(“ISO-8859-1″), “GBK”);
2.Java中是如何支持正则表达式操作
Java中的String类提供了支持正则表达式操作的方法，包括：matches()、replaceAll()、replaceFirst()、split()。此外，Java中可以用Pattern类表示正则表达式对象
3.&和&&的区别
&用法  (1)按位与 二进制位全部为1则为1的运算符；(2)逻辑与  判断左右两侧条件
&&：短路与，左侧条件不成立不会判断右侧
4.int和Integer区别
 	Integer a = new Integer(3);
        Integer b = 3;                  // 将3自动装箱成Integer类型
        int c = 3;
        System.out.println(a == b);     // false 两个引用没有引用同一对象
        System.out.println(a == c);     // true a自动拆箱成int类型再和c比较
5.Array和ArrayList的不同点
    Array可以包含基本类型和对象类型，ArrayList只能包含对象类型。
    Array大小是固定的，ArrayList的大小是动态变化的。
    ArrayList提供了更多的方法和特性，比如：addAll()，removeAll()，iterator()等等。
    对于基本类型数据，集合使用自动装箱来减少编码工作量。但是，当处理固定大小的基本数据类型的时候，这种方式相对比较慢。
6.值传递和引用传递
    值传递是对基本型变量而言的,传递的是该变量的一个副本,改变副本不影响原变量.(等学会JVM 可以解释一下 堆和栈之间的关系)
    引用传递一般是对于对象型变量而言的,传递的是该对象地址的一个副本, 并不是原对象本身 。 所以对引用对象进行操作会同时改变原对象.
    一般认为,java内的传递都是值传递.
7.自动拆装箱 (基本数据类型Java语言支持的8种基本数据类型是：byte,short,int,long,float,double,boolean,char->Character)
    自动装箱是Java编译器在基本数据类型和对应的对象包装类型之间做的一个转化。
    比如：把int转化成Integer，double转化成Double，等等。反之就是自动拆箱
8.出现4.0-3.6=0.40000001多位小数
    2进制的小数无法精确的表达10进制小数，计算机在计算10进制小数的过程中要先转换为2进制进行计算，这个过程中出现了误差
9.十进制的数在内存中存储方式
    补码  补码->原码  按位取反+1
    -5对应正数5（00000101）→所有位取反（11111010）→加1(11111011) 所以-5的补码是11111011
10.Lamda表达式的优缺点
    优点：1. 简洁。2. 非常容易并行计算。3. 可能代表未来的编程趋势。
    缺点：1. 若不用并行计算，很多时候计算速度没有比传统的 for 循环快。（并行计算有时需要预热才显示出效率优势）2. 不容易调试。3. 若其他程序员没有学过 lambda 表达式，代码不容易让其他语言的程序员看懂。
11.java8的新特性 https://www.cnblogs.com/acker-ploy/p/12047906.html
    Lambda 表达式 − Lambda允许把函数作为一个方法的参数（函数作为参数传递进方法中。
    方法引用− 方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器。与lambda联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码。
    默认方法− 默认方法就是一个在接口里面有了一个实现的方法。
    新工具− 新的编译工具，如：Nashorn引擎 jjs、 类依赖分析器jdeps。
    Stream API −新添加的Stream API（java.util.stream） 把真正的函数式编程风格引入到Java中。
    Date Time API − 加强对日期与时间的处理。LocalDateTime LocalDate LocalTime
    Optional 类 − Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常。
    Nashorn, JavaScript 引擎 − Java 8提供了一个新的Nashorn javascript引擎，它允许我们在JVM上运行特定的javascript应用。




